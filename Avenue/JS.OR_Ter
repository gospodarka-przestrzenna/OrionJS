'**JS.OR_Ter
lstATab={}
LstFTab={}
for each a in _Lst_nz
  VTb=av.FindDoc (_Pref+"_"+_V1+"_Akt_Sc_"+a+".dbf").GetVTab
  lstATab.Add(VTb)
  LstFTab.Add(VTb.FindField("Iter"+(_IterN+1).AsString))
end

VTabRej=av.FindDoc (_Pref+"_rej.dbf").GetVTab
FldCap=VTabRej.FindField("Cap")

lst_Cap={}
for each r in 0..(_nr-1)
  lst_Cap.Add(VTabRej.ReturnValue(FldCap,r))
end
lst_Fi={}   '######### wspolczynniki wagowe Fi
for each a in 0..(_nnz-1)
  Sum=0
  for each p in _lstProc
    Sum=Sum+(_lst_eKFD.Get(a).Get(p)*_lst_rKFD.Get(p))
  end
  lst_Fi.Add(Sum/_nProc)
end

'_lst_VnzA_t=_LST_TMP.DeepClone
'_LST_TMP=_lst_VnzA_t.DeepClone
lst_VASc=_lst_VnzA_t.DeepClone
'RETURN  NIL


'$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$start cut bez konf ter
'FOR EACH i in 0..(_nnz-1)
'  MSGBOX.LISTASSTRING(_lst_jKFD.Get(i),"J"++i.Asstring,"")
'end
'FOR EACH i in 0..(_nnz-1)
'  MSGBOX.LISTASSTRING(_lst_eKFD.Get(i),"E"++i.Asstring,"")
'end
'MSGBOX.LISTASSTRING(_lst_rKFD,"R","")
'MSGBOX.LISTASSTRING(lst_Fi,"Fi","")
'for each i in 0..2
'  MSGBOX.ListAsString(lst_VASc.Get(i),"VA","")
'end
'RETURN NIL

'LSTSC={{},{},{},{}}
'for each ls in LSTSC
'  for each r in 0..(_nr-1)
'    ls.Add(0)
'  end
'end

lst_ACutSum={}  'dla sprawozdania  relokacji
for each a in 0..(_nnz-1)
  lst_ACutSum.Add(0)
end

'=====================================
Rep1=True
nR1=0
While (Rep1)
  nR1=nR1+1
  if (nR1>50) then
    Rep1=FALSE
    BREAK
  end
  
  lst_Ocp={}  '######## wskazniki wypelnienia
  Ocp_mx=0
  for each r in 0..(_nr-1)
    Sum=0
    
'    IF (R<5) THEN
'    MSGBOX.LISTASSTRING(_lst_VnzA_t.Get(r),r.AsString,"Poczatek REP1")
'    END
    
    for each a in 0..(_nnz-1)
      Sum=Sum+(_lst_VnzA_t.Get(r).Get(a)/_lst_Dns.Get(a))
    end
    Ocp=Sum/lst_Cap.Get(r)
    lst_Ocp.Add(Ocp)
    if (Ocp>Ocp_mx) then
      Ocp_mx=Ocp
    end
  end


'  MSGBOX.LISTASSTRING(lst_Ocp,"Ocup","")
  'RETURN NIL
  
  
  if (Ocp_mx<=1.02) then
    Rep1=FALSE
    BREAK
  end

  Ocp_cut=(_vc*Ocp_mx)+((1- _vc)/Ocp_mx) '#####aktualny poziom ciecia
  
  'MSGBOX.INFO(Ocp_mx.AsString++Ocp_cut.AsString,"Max, Cut"++nR1.AsString)
   
  Rep2=TRUE
  nR2=0
  while (Rep2)
    nR2=nR2+1
    if (nR2>50) then
      Rep2=FALSE
      BREAK
    end

    lst_ACut={}
    for each a in 0..(_nnz-1)
      lst_ACut.Add(0)
    end
    '=========ciecie w rejonach przepelnionych
    for each r in 0..(_nr-1)
      Ocp=lst_Ocp.Get(r)
      if (Ocp>Ocp_cut) then  '@@@@@@@ciecie tylko w rejonach przepelnionych
        
        
        '=======wstepny wsp ciecia aktywnosci rejonach
        Sum=0
        for each a in 0..(_nnz-1)
          Sum=Sum+(lst_Fi.Get(a)*_lst_VnzA_t.Get(r).Get(a)/_lst_Dns.Get(a))  'mianownik wsp. ciecia
        end
        
        lst_Oc1={}
        for each a in 0..(_nnz-1)
          lst_Oc1.Add(lst_Fi.Get(a)*lst_Cap.Get(r)*Ocp_cut/Sum)  '#####wsp ciecia aktywn a w rejonie r
        end
        
'        MSGBOX.LISTASSTRING(lst_Oc1,"poczatkowe wsk ciecia rej"++r.AsString,NR1.AsString++NR2.AsString)
        '=======end wstepny wsp ciecia aktywnosci rejonach
        
        
        '=======normowanie wsp ciecia aktywnosci rejonach i przydzial aktywn
        Rep3=True
        NR3=0
        while (REP3)
          NR3=NR3+1
          Sum1=0
          Sum2=0
          for each a in 0..(_nnz-1)
            if(lst_Oc1.Get(a)>=1) then
              Sum1=Sum1+(_lst_VnzA_t.Get(r).Get(a)/_lst_Dns.Get(a))
            else
              Sum2=Sum2+(lst_Fi.Get(a)*_lst_VnzA_t.Get(r).Get(a)/_lst_Dns.Get(a))
            end
          end 
                                                            
          for each a in 0..(_nnz-1)
            v=lst_Oc1.Get(a)
            if (v>=1) then
              v=1
            else
              v=lst_Fi.Get(a)*(Ocp_cut*lst_Cap.Get(r) - Sum1)/Sum2
            end
            lst_Oc1.Set(a,v)
          end
          lst=lst_Oc1.Clone
          lst.Sort(FALSE)
          mx=lst.Get(0)
          
          
          if (mx<=1) then
            Rep3=FALSE
            BREAK
          end
        end
        'MSGBOX.LISTASSTRING(lst_Oc1,"  ciecia w rej:"++r.AsString,NR1.AsString++NR2.AsString++NR3.AsString)

        'TSUM=0
        'FOR each a in 0..(_nnz-1)
          'TSUM=TSUM+(_lst_VnzA_t.Get(r).Get(a)*v/_lst_Dns.Get(a))
        'END
        
        
        ''''''''''''MSGBOX.LISTASSTRING({TSUM,lst_Cap.Get(r)*Ocp_cut},"Before","")
        
        for each a in 0..(_nnz-1)
          v=lst_Oc1.Get(a)
          va=_lst_VnzA_t.Get(r).Get(a)
          lst_ACut.Set(a,lst_ACut.Get(a)+(va*(1-v))) '###sciete porcje aktywn  
          _lst_VnzA_t.Get(r).Set(a,va*v)    '#######nowy przydzial aktywn a w rej r
          
          
          'LSTSC.GET(a).SET(r,LSTSC.GET(a).GET(r)+(va*(1-v)))
          
          
        end

        'TSUM=0
        'FOR each a in 0..(_nnz-1)
          'TSUM=TSUM+(_lst_VnzA_t.Get(r).Get(a)*v/_lst_Dns.Get(a))
        'END
        ''''''''''''MSGBOX.LISTASSTRING({TSUM,lst_Cap.Get(r)*Ocp_cut},"After","")
        'RETURN NIL
        
        'MSGBOX.LISTASSTRING({TSUM,((Ocp_cut*lst_Cap.Get(r) - Sum1))},"must be equal","")
        'MSGBOX.LISTASSTRING(lst_ACut,"Sciete aktywnosci, rej"++r.AsString,"")
        'Stp=MSGBOX.YESNO("co dalej","",True)
        'if (STP=FALSE) then Return NIL end
        '=======end normowanie wsp ciecia aktywnosci rejonach i przydzial aktywn
'      MSGBOX.LISTASSTRING(_lst_VnzA_t.Get(r),r.AsString,"Tylko Scinane rejony")
      end  'if (Ocp>Ocp_cut)
      

    end 'r
'    MSGBOX.LISTASSTRING(lst_ACut,"","Sciete aktywnosci")
    
    '========  End ciecie w rejonach przepelnionych
      
    'MSGBOX.INFO("koniec scinania","")
    'RETURN NIL
    for each a in 0..(_nnz-1)
      lst_ACutSum.Set(a, lst_ACutSum.Get(a)+lst_ACut.Get(a)) 'dla sprawozdania  relokacji
    end
    '========== rozprowadz nadwyzki
    lst_Sum={}
    for each a in 0..(_nnz-1)
      lst_Sum.Add(0)
    end
    for each r in 0..(_nr-1)
      if (Ocp<(Ocp_cut*0.98)) then '@@@@@@@tylko w rejonach z miejscem
        for each a in 0..(_nnz-1)
          a1=lst_VASc.Get(r).Get(a)
          a2=_lstVA.Get(r).Get(_Lst_nzn.Get(a))
          a3=(a1^1.5)/(a2^0.5)
          if ((a3.IsNULL).NOT) then
            lst_Sum.Set(a, lst_Sum.Get(a)+a3) 'BBBBBBBBBBBBBBBBB a2=0 powoduje blad#######
          End
'          IF (R<4) THEN
'          MSGBOX.LISTASSTRING({r,a,a1,a2,a3},"rej, a , a1, a2, a3","Retencja")
'          END
        end
      end
'      IF (R<4) THEN
'      MSGBOX.LISTASSTRING(_lst_VnzA_t.Get(r),r.AsString,"Przed Retencja")
'      MSGBOX.LISTASSTRING(lst_Sum,"lst_Sum","Retencja")
'      END
    end
    

    for each r in 0..(_nr-1)
      if (Ocp<(Ocp_cut*0.98)) then
        for each a in 0..(_nnz-1)
          a1=lst_VASc.Get(r).Get(a)
          a2=_lstVA.Get(r).Get(_Lst_nzn.Get(a))
          a3=(a1^1.5)/(a2^0.5)
          if ((a3.IsNULL).NOT) then
            va=_lst_VnzA_t.Get(r).Get(a)
            _lst_VnzA_t.Get(r).Set(a,va+(a3/lst_Sum.Get(a)*lst_ACut.Get(a)) )'#####nowy przydz aktywn a w rej r
          end
        end
      end
'      IF (R<4) THEN
'      MSGBOX.LISTASSTRING(_lst_VnzA_t.Get(r),r.AsString,"Tylko Po Retencji")
'      END
    end 
    '========== END rozprowadz nadwyzki
'    RETURN NIL
    '========== aktualne wskazniki wypelnienia rejonow
    lst_Ocp={}  
    Ocp_mx=0
    for each r in 0..(_nr-1)
      Sum=0
      for each a in 0..(_nnz-1)
        Sum=Sum+(_lst_VnzA_t.Get(r).Get(a)/_lst_Dns.Get(a))
      end
      Ocp=Sum/lst_Cap.Get(r)
      lst_Ocp.Add(Ocp)
      if (Ocp>Ocp_mx) then
        Ocp_mx=Ocp
      end
    end
    '========== END aktualne wskazniki wypelnienia rejonow

    if (Ocp_mx<=(Ocp_Cut*1.02)) then
      Rep2=FALSE
      BREAK
    end
  end 'END While Rep2
  '========================================
  
  if (Ocp_Cut<=1.02) then
    Rep1=FALSE
    BREAK
  end    
end 'Rep1
'======= END Rep1








'FOR each a in 0..(_nnz-1)
'MSGBOX.LISTASSTRING(LSTSC.Get(a),"SCIETE AKTYWNOSCI",a.AsString)
'END
'RETURN NIL
for each a in 0..(_nnz-1)
   _VTb_Var.SetValue( _lst_fTr.Get(_Lst_nzn.Get(a)),  _VTb_Var.GetNumRecords-1, lst_ACutSum.Get(a))
end
'$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$End cut bez konf ter

for each a in 0..(_nnz-1)
  Sum=0
  aa=_Lst_nzn.Get(a)
  for each r in 0..(_nr-1)
    Sum=Sum+_lst_VnzA_t.Get(r).Get(a)
  end 
  Sum=_LstPA.Get(aa)/Sum
  for each r in 0..(_nr-1)
    _lst_VnzA_t.Get(r).Set(a,_lst_VnzA_t.Get(r).Get(a)*Sum)
  end 
  
  VTb=av.FindDoc(_Pref+"_"+ _V1+"_Akt_"+aa.AsString+".dbf").GetVTab

  VTb.SetEditable(True)
  fldIter = Field.Make("Iter_"+(_IterN+1).AsString, #FIELD_DECIMAL, 10, 1)
  fldIter.SetVisible( TRUE )
  VTb.AddFields({fldIter})
  
  for each r in 0..(_nr-1)
    VTb.SetValue(fldIter, r, _lst_VnzA_t.Get(r).Get(a)) 'z konfliktem terenowym
    'VTb.SetValue(fldIter, r, lst_VASc.Get(r).Get(a))    'bez konfliktu terenowego
  end
  VTb.SetEditable(False)

end  

  
